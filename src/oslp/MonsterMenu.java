package oslp;

/**
 *
 * @author Artpicks
 */

import java.awt.*;
import javax.swing.*;
import java.io.*;
import java.util.*;
import java.awt.event.*;
import java.text.NumberFormat;

public class MonsterMenu extends javax.swing.JFrame {

    public MonsterMenu() {
        initComponents();
        
    }
    
    public void makeDynamicWindow(String filepath){
        this.setTitle("OSLP");
        ImageIcon img = new ImageIcon(getClass().getResource("/oslp/images/Beer tankard.png"));
        this.setIconImage(img.getImage());
        int x = 0;
        int y = 0;
        final int X_MAX = 6;
        try{
            FileReader filereader = new FileReader(filepath);
            BufferedReader reader = new BufferedReader(filereader);
            String line;
            reader.readLine();
            while((line = reader.readLine()) != null){
                String[] split = line.split(",");
                addButton(split[0],split[1], x, y);
                x++;
                if(x >= X_MAX){
                    x = 0;
                    y++;
                }
            }
            reader.close();
            filereader.close();
        }
        catch(FileNotFoundException e){
            System.out.println("File not found! Ensure that "+filepath+" exists");
            System.exit(-1);
        }
        catch(IOException e){
            System.out.println("Inupt/Output Error: "+e.getMessage());
            System.exit(-1);
        }
        pack();
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int xi = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int yi = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(xi, yi); 
    }

    public void addButton(String monster_Name, String monster_log_Name, int x, int y){
        GridBagConstraints gbc = new GridBagConstraints();
        JPanel panel = new JPanel();
        panel.setPreferredSize(new Dimension(175,75));
        panel.setLayout(new GridBagLayout());
        JButton button = new JButton();
        button.setPreferredSize(new Dimension(165,65));
        button.setText(monster_Name);
        DropTable table = new DropTable();
        button.addActionListener(new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent e){
            ArrayList<ItemDrop> dropTable = table.getDropTable(monster_log_Name);
            MonsterLog monster = new MonsterLog(monster_Name, dropTable);
            monster.loadMonsterXML();
            MonsterWindow monsterWindow = new MonsterWindow();
            monsterWindow.makeDynamicWindow(monster);
            MonsterMenu.this.setVisible(false);
            monsterWindow.setVisible(true);
            MonsterMenu.this.dispose();
        }
        });
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        panel.add(button, gbc);
        gbc = new GridBagConstraints();
        gbc.gridx = x;
        gbc.gridy = y;
        getContentPane().add(panel, gbc);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonsterMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonsterMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonsterMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonsterMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonsterMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
